extends layout

block content
  .profile_theme.centered(data-menu="profile", data-view="profile")
    .cover
      .cover_image(style="background-image:url(/images/homepage_2.jpg)")
      .content
        h1.name.black_background(data-view="components/editables/editable_text")
          span.text #{profile.name}
        br
        h3.type.black_background(data-view="components/editables/editable_select")
          span.text DJ/Producer
        br
        ul.genres.black_background
          for genre, i in profile.genres
            if i < profile.genres.length - 1
              li #{genre},
            else
              li #{genre}
        .profile_image.upload_wrapper(data-view="components/image_uploader", data-id="profile_picture")
          img(src="#{profile.image}")
          a.upload_element.edit_image(href="#")
            span.spritesheet.camera_icon
            span Update profile picture
            span.progress

            form.element_on_write_mode(class="cloudinary_form")
              input.api_key(type="hidden", name="api_key", value="#{cloudinary.api_key}")
              input.cloud_name(type="hidden", name="cloud_name", value="#{cloudinary.cloud_name}")
              input.unsigned_id(type="hidden", name="unsigned_id", value="#{cloudinary.unsigned_ids.profile}")



          

        .sidebar_right
          .big_number
            span.number 2
            span.text Followers

          .big_number
            span.number 0
            span.text Streams 

          .big_number
            span.number 2
            span.text 
              | Listeners 
              br
              | 

        a.cover_button.button_with_icon.element_on_read_mode(href="#", data-profile="set-write-mode")
          span.spritesheet.edit_icon
          span Edit Profile

        a.cover_button.button_with_icon.element_on_write_mode(href="#", data-profile="set-read-mode")
          span.spritesheet.edit_icon
          span Save Profile

        .change_cover.upload_wrapper(data-view="components/image_uploader", data-id="profile_cover")
          a.upload_element.button_with_icon.black_button.element_on_write_mode(href="#", data-profile="set-write-mode")
            span.spritesheet.camera_icon
            span Change Cover
            span.progress

          form.element_on_write_mode(class="cloudinary_form")
            input.api_key(type="hidden", name="api_key", value="#{cloudinary.api_key}")
            input.cloud_name(type="hidden", name="cloud_name", value="#{cloudinary.cloud_name}")
            input.unsigned_id(type="hidden", name="unsigned_id", value="#{cloudinary.unsigned_ids.cover}")

    .profile_content
      .profile_left
        .profile_bio.outline_box
          .element_on_read_mode
            a.outline_icon(href="#", title="Edit Profile", data-profile="set-write-mode")
              span.spritesheet.edit_icon
            h4.location London - UK
            .bio 
              | Thomas Amundsen from Oslo, now based in London has from an early age lots of musical influences, experimenting from acoustic instruments to electronic music production and DJing.
              br
              br
              | He released his debut EP “I Feel” on Fusion recordings, sub-label of Dj Center Records, and has since released frequently on labels such as; Dobara, Susurrous Music, Incognitus Recordings, Koolwaters and gained support from the likes of Amine Edge, Stacey Pullen, Detlef, Slam, Marc Vedo, Loverdose, Ashley Wild, Jobe and many more

            .social
              a.spotify_link(href="#" title="Spotify")
                .spritesheet.profile_spotify
              a.soundcloud_link(href="#" title="Soundcloud")
                .spritesheet.profile_soundcloud
              a.facebook_link(href="#" title="Facebook")
                .spritesheet.profile_facebook

          form.element_on_write_mode.profile_form
            input.squared_input.location_input(type="text", placeholder="Add your location", name="location")
            textarea.squared_input.bio_input(placeholder="Add a bio to your profile", name="bio")
            input.squared_input.spotify_input(type="text", placeholder="Spotify", name="spotify")
            input.squared_input.soundcloud_input(type="text", placeholder="Soundcloud", name="soundcloud")
            input.squared_input.facebook_input(type="text", placeholder="Facebook", name="facebook")
            button.button.save_button.no_shadow(data-profile="set-read-mode") Save







      .list_sessions
        .session.outline_box
          a.image(href="#", title="Old School House session", style="background-image:url(/images/profile_session_1.jpg)")
          .content
            h2.session_title 
              a(href="#", title="#{profile.live.title}") #{profile.live.title}
            a.session_author.underline_link(href="#", title="#{profile.live.author}") #{profile.live.author}
            .genres
              for genre in profile.live.genres
                a.tag(href="#", title="#{genre}") #{genre}

            .small_info
              .location 
                span.spritesheet.icon_location
                span.text #{profile.live.location}
              .likes 
                span.spritesheet.icon_guests
                span.text #{profile.live.loves}
              .guests 
                span.spritesheet.icon_plays
                span.text #{profile.live.guests}

            .live 
              p.label now live
              p.time 02:33


        .recorded_sessions
          .title
            h2 Recorded session
            span.session_icon.spritesheet
            span.session_text #{profile.recorded.length}

            span.alert_icon.spritesheet
            span.alert_text #{profile.free_storage} free storage remaining

          for room in profile.recorded
            .session.outline_box(id="session_recorded_#{room.id}", data-view="components/user_set", data-data="#{JSON.stringify(room)}")

              a.image(href="#", title="#{room.title}", style="background-image:url(/images/profile_session_1.jpg)")
                span.room_play.spritesheet
              .content
                h2.session_title 
                  a(href="#", title="#{room.title}") #{room.title}
                a.session_author.underline_link(href="#", title="#{room.author}") #{room.author}
                .genres
                  for genre in room.genres
                    a.tag(href="#", title="#{genre}") #{genre}
                  
                .small_info
                  .location 
                    span.spritesheet.icon_location
                    span.text #{room.location}
                  .likes 
                    span.spritesheet.icon_likes
                    span.text #{room.loves}
                  .guests 
                    span.spritesheet.icon_plays
                    span.text #{room.guests}

                .edit_session_wrapper
                  a.spritesheet.settings_button.settings_profile_set_hover(href="#", title="Setting Session", data-view="components/click_trigger" data-target="#session_recorded_#{room.id} .edit_session_popup") Settings Session
                  .edit_session_popup
                    .triangle
                    a.download_button.button.yellow_button.small_button_4(href="#", title="Download") Download
                    a.edit_button.button.yellow_button.small_button_4(href="#", title="Edit") Edit
                    a.delete_button.button.red_button.small_button_4(href="#", title="Delete") Delete

              .delete_screen
                .content
                  h2 Are you sure you want to delete this recording?
                  a.button.red_button.small_button_4.confirm_delete(href="#", title="Delete") Delete
                  a.button.white_button.small_button_4.cancel_delete(href="#", title="Cancel") Cancel


  include ./rooms/room_modal.jade
